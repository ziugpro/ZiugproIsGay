game.StarterGui:SetCore("SendNotification", {
    Title = "Tool Hub",
    Text = "Success Loading",
    Icon = "rbxthumb://type=Asset&id=76608011467652&w=420&h=420",
    Duration = 5,
    Callback = function()
    end
})
repeat task.wait() until game:IsLoaded()

getgenv().Image = "rbxthumb://type=Asset&id=76608011467652&w=420&h=420"
getgenv().ToggleUI = "LeftControl"

task.spawn(function()
    if not getgenv().LoadedMobileUI then
        getgenv().LoadedMobileUI = true
        local OpenUI = Instance.new("ScreenGui")
        local ImageButton = Instance.new("ImageButton")
        local UICorner = Instance.new("UICorner")
        OpenUI.Name = "OpenUI"
        OpenUI.Parent = game:GetService("CoreGui")
        OpenUI.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
        ImageButton.Parent = OpenUI
        ImageButton.BackgroundColor3 = Color3.fromRGB(105, 105, 105)
        ImageButton.BackgroundTransparency = 0.8
        ImageButton.Position = UDim2.new(0, 5, 0, 5)
        ImageButton.Size = UDim2.new(0, 55, 0, 55)
        ImageButton.Image = getgenv().Image
        ImageButton.Draggable = false
        ImageButton.Transparency = 1
        UICorner.CornerRadius = UDim.new(100)
        UICorner.Parent = ImageButton
        ImageButton.MouseButton1Click:Connect(function()
            game:GetService("VirtualInputManager"):SendKeyEvent(true, getgenv().ToggleUI, false, game)
        end)
    end
end)

local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()
local Window = Fluent:CreateWindow({
    Title = "Tool Hub [ Premium ]",
    SubTitle = "By Ziugpro",
    TabWidth = 130,
    Size = UDim2.fromOffset(505, 355),
    Acrylic = true,
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl
})

local Tabs = {
    Main = Window:AddTab({ Title = "Tab General", Icon = "" }),
    Shop = Window:AddTab({ Title = "Tab Shop", Icon = "" }),
    
}

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local player = Players.LocalPlayer
local backpack = player:WaitForChild("Backpack")
local remote = game:GetService("ReplicatedStorage"):WaitForChild("GameEvents"):WaitForChild("Plant_RE")

local autoCollect, autoSell, autoBuySeeds, autoPlant, autoWalkToPlant = false, false, false, false, false
local walkSpeed = 30

local function getOwnedPlot()
    for _, plot in pairs(workspace.Farm:GetChildren()) do
        local important = plot:FindFirstChild("Important") or plot:FindFirstChild("Importanert")
        if important then
            local data = important:FindFirstChild("Data")
            if data and data:FindFirstChild("Owner") and data.Owner.Value == player.Name then
                return plot
            end
        end
    end
    return nil
end

task.spawn(function()
    while task.wait(0.1) do
        if _G.autoCollect then
            local plot = getOwnedPlot()
            local farm = plot and plot:FindFirstChild("Important"):FindFirstChild("Plants_Physical")
            if farm then
                for _, prompt in ipairs(farm:GetDescendants()) do
                    if prompt:IsA("ProximityPrompt") then
                        local playerRoot = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
                        if playerRoot then
                            local dist = (playerRoot.Position - prompt.Parent.Position).Magnitude
                            if dist <= 20 then
                                prompt.Exclusivity = Enum.ProximityPromptExclusivity.AlwaysShow
                                prompt.MaxActivationDistance = 100
                                prompt.RequiresLineOfSight = false
                                prompt.Enabled = true
                                fireproximityprompt(prompt, 1, true)
                            elseif autoWalkToPlant then
                                -- Make the player walk to the plant if it's farther than 20 studs
                                local humanoid = player.Character and player.Character:FindFirstChild("Humanoid")
                                if humanoid then
                                    humanoid:MoveTo(prompt.Parent.Position + Vector3.new(0, 5, 0)) -- slight offset to stand near
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end)

task.spawn(function()
    while task.wait() do
        if autoSell then
            local shopStand = workspace.NPCS["Sell Stands"]["Shop Stand"]
            if shopStand then
                local character = player.Character or player.CharacterAdded:Wait()
                local root = character:WaitForChild("HumanoidRootPart")
                task.wait(0.5)
                root.CFrame = shopStand.CFrame * CFrame.new(0, 0, 3)
                task.wait(0.5)
                game:GetService("ReplicatedStorage"):WaitForChild("GameEvents"):WaitForChild("Sell_Inventory"):FireServer()
                task.wait(0.5)
                root.CFrame = CFrame.new(27.028656, 4.61500359, -81.4960098, 0.801240802, -3.3885601e-09, -0.598342061, -3.22234683e-10, 1, -6.09475403e-09, 0.598342061, 5.07617193e-09, 0.801240802)
            end
        end
    end
end)

local function autoBuySeedsFunction()
    local shopUI = player:WaitForChild("PlayerGui"):WaitForChild("Seed_Shop")
    local scroll = shopUI.Frame.ScrollingFrame
    for _, item in pairs(scroll:GetChildren()) do
        local stock = item:FindFirstChild("Stock")
        if stock and stock:IsA("NumberValue") and stock.Value > 0 then
            ReplicatedStorage:WaitForChild("GameEvents"):WaitForChild("BuySeedStock"):FireServer(item.Name)
        end
    end
end

task.spawn(function()
    while task.wait(0.1) do
        if autoBuySeeds then
            autoBuySeedsFunction()
        end
    end
end)

local function findSeedTool()
    for _, item in ipairs(player.Character:GetChildren()) do
        if item:IsA("Tool") and item.Name:find("Seed") then
            local crop = item.Name:match("^(.-) Seed")
            return item, crop
        end
    end

    for _, item in ipairs(backpack:GetChildren()) do
        if item:IsA("Tool") and item.Name:find("Seed") then
            local crop = item.Name:match("^(.-) Seed")
            return item, crop
        end
    end

    return nil, nil
end

task.spawn(function()
    while task.wait(0.1) do
        if autoPlant then
            local character = player.Character or player.CharacterAdded:Wait()
            local root = character:WaitForChild("HumanoidRootPart")

            local pos = Vector3.new(math.floor(root.Position.X), 0.1, math.floor(root.Position.Z))
            local tool, seedType = findSeedTool()

            if tool and seedType then
                if tool.Parent == backpack then
                    character:WaitForChild("Humanoid"):EquipTool(tool)
                    repeat task.wait() until tool.Parent == character
                end
                remote:FireServer(pos, seedType)
            end
        end
    end
end)

task.spawn(function()
    while task.wait(0.1) do
        local character = player.Character or player.CharacterAdded:Wait()
        local humanoid = character:WaitForChild("Humanoid")
        if humanoid then
            humanoid.WalkSpeed = walkSpeed
        end
    end
end)
local Toggle = Tabs.Main:AddToggle(
    "AutoCollectToggle",
    {
        Title = "Auto Collect",
        Default = false,
        Callback = function(state)
            autoCollect = state
        end
    }
)

local Toggle = Tabs.Main:AddToggle(
    "AutoWalkToPlantToggle",
    {
        Title = "Auto Walk To Plant",
        Default = false,
        Callback = function(state)
            autoWalkToPlant = state
        end
    }
)

local Toggle = Tabs.Main:AddToggle(
    "AutoSellToggle",
    {
        Title = "Auto Sell",
        Default = false,
        Callback = function(state)
            autoSell = state
        end
    }
)

local Toggle = Tabs.Main:AddToggle(
    "AutoBuySeedsToggle",
    {
        Title = "Auto Buy Seeds",
        Default = false,
        Callback = function(state)
            autoBuySeeds = state
        end
    }
)

local Toggle = Tabs.Main:AddToggle(
    "AutoPlantToggle",
    {
        Title = "Auto Plant",
        Default = false,
        Callback = function(state)
            autoPlant = state
        end
    }
)

local Main = Tabs.Main:AddSection("Teleport To NPC")
Tabs.Main:AddButton({
    Title = "Teleport To NPC Misc",
    Description = "",
    Callback = function()
        local player = game.Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()
        local rootPart = character:WaitForChild("HumanoidRootPart")

        local destination = Vector3.new(-287.1625671386719, 4.435470104217529, -11.827066421508789)
        rootPart.CFrame = CFrame.new(destination + Vector3.new(0, 5, 0))
    end
})
Tabs.Main:AddButton({
    Title = "Teleport To NPC Seed",
    Description = "",
    Callback = function()
        local player = game.Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()
        local rootPart = character:WaitForChild("HumanoidRootPart")

        local destination = Vector3.new(87.43911743164062, 4.4898881912231445, -25.5799503326416)
        rootPart.CFrame = CFrame.new(destination + Vector3.new(0, 5, 0))
    end
})
Tabs.Main:AddButton({
    Title = "Teleport To NPC Sell",
    Description = "",
    Callback = function()
        local player = game.Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()
        local rootPart = character:WaitForChild("HumanoidRootPart")

        local destination = Vector3.new(87.64090728759766, 4.497993469238281, 3.462294340133667)
        rootPart.CFrame = CFrame.new(destination + Vector3.new(0, 5, 0))
    end
})
local Main = Tabs.Main:AddSection("Server")
local JobId = ""
local Input = Tabs.Main:AddInput("Input", {
    Title = "Job-Id",
    Default = "",
    Numeric = false,
    Finished = true,
    Placeholder = "",
    Callback = function(Value)
        JobId = Value
    end
})

Tabs.Main:AddButton({
    Title = "Join Server",
    Description = "",
    Callback = function()
        if JobId ~= "" then
            game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, JobId, game.Players.LocalPlayer)
        end
    end
})
Tabs.Main:AddButton({
    Title = "Copy JobId",
    Description = "",
    Callback = function()
        setclipboard(game.JobId)
    end
})
game.StarterGui:SetCore("SendNotification", {
    Title = "Tool Hub",
    Text = "Success Loading",
    Icon = "rbxthumb://type=Asset&id=76608011467652&w=420&h=420",
    Duration = 5,
    Callback = function()
    end
})
local seeds = {
    "Carrot", "Strawberry", "Blueberry", "Orange Tulip", "Tomato", "Corn", "Daffodil",
    "Watermelon", "Pumpkin", "Apple", "Bamboo", "Coconut", "Cactus", "Dragon Fruit",
    "Mango", "Grape", "Mushroom", "Pepper", "Cacao", "Beanstalk"
}

local MultiDropdown = Tabs.Shop:AddDropdown("MultiDropdown", {
    Title = "Select Seed",
    Description = "",
    Values = seeds,
    Multi = true,
    Default = {seeds[1]},
    Callback = function(selected)
        _G.SelectedSeeds = selected
    end
})

local TogglePro = Tabs.Shop:AddToggle("TogglePro", {
    Title = "Auto Buy Seed",
    Default = false
})
TogglePro:OnChanged(function(Value)
    _G.TogglePro = Value
end)

spawn(function()
    while wait(1) do
        if _G.TogglePro and _G.SelectedSeeds then
            local player = game.Players.LocalPlayer
            local shopUI = player:WaitForChild("PlayerGui"):WaitForChild("Seed_Shop")
            local scroll = shopUI.Frame.ScrollingFrame
            for _, seedName in pairs(_G.SelectedSeeds) do
                for _, item in pairs(scroll:GetChildren()) do
                    if item.Name == seedName then
                        local stock = item:FindFirstChild("Stock")
                        if stock and stock.Value > 0 then
                            game.ReplicatedStorage.GameEvents.BuySeedStock:FireServer(item.Name)
                        end
                    end
                end
            end
        end
    end
end)
local gears = {
    "Watering Can", "Trowel", "Recall Wrench", "Basic Sprinkler", "Advanced Sprinkler",
    "Godly Sprinkler", "Lightning Rod", "Master Sprinkler", "Favorite Tool", "Harvest Tool",
    "Star Caller", "Chocolate Sprinkler", "Night Staff"
}

local MultiGearDropdown = Tabs.Shop:AddDropdown("MultiGearDropdown", {
    Title = "Select Gear",
    Description = "",
    Values = gears,
    Multi = true,
    Default = {"Watering Can"},
    Callback = function(selected)
        _G.SelectedGears = selected
    end
})

local ToggleBuyGear = Tabs.Shop:AddToggle("ToggleBuyGear", {Title = "Auto Buy Gear", Default = false})
ToggleBuyGear:OnChanged(function(state)
    _G.ToggleBuyGear = state
end)

spawn(function()
    while wait(1) do
        if _G.ToggleBuyGear and _G.SelectedGears and #_G.SelectedGears > 0 then
            local player = game.Players.LocalPlayer
            local shopUI = player:WaitForChild("PlayerGui"):WaitForChild("Gear_Shop")
            local scroll = shopUI.Frame.ScrollingFrame
            for _, gearName in pairs(_G.SelectedGears) do
                for _, item in pairs(scroll:GetChildren()) do
                    if item.Name == gearName then
                        local stock = item:FindFirstChild("Stock")
                        if stock and stock.Value > 0 then
                            game.ReplicatedStorage.GameEvents.BuyGearStock:FireServer(item.Name)
                        end
                    end
                end
            end
        end
    end
end)
